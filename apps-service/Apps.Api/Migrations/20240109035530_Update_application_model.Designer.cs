// <auto-generated />
using System;
using Apps.Api.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Apps.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240109035530_Update_application_model")]
    partial class Updateapplicationmodel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Apps.Api.Models.Application", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("AppExposedModule")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("app_exposed_module");

                    b.Property<string>("AppIcon")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("app_icon");

                    b.Property<string>("AppName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("app_name");

                    b.Property<string>("AppPath")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("app_path");

                    b.Property<int?>("Order")
                        .HasColumnType("integer")
                        .HasColumnName("order");

                    b.Property<string>("RemoteEntry")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("remote_entry");

                    b.Property<string>("RemoteName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("remote_name");

                    b.HasKey("Id");

                    b.ToTable("applications", "apps");
                });

            modelBuilder.Entity("Ecoba.Microservice.BaseService.Domain.UserRole", b =>
                {
                    b.Property<string>("UserNumber")
                        .HasColumnType("text")
                        .HasColumnName("user_number");

                    b.Property<string>("Role")
                        .HasColumnType("text")
                        .HasColumnName("role");

                    b.HasKey("UserNumber", "Role");

                    b.HasIndex("UserNumber", "Role");

                    b.ToTable("user_roles", "base_service");
                });
#pragma warning restore 612, 618
        }
    }
}
